<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="
http://www.springframework.org/schema/beans 
http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
http://www.springframework.org/schema/context 
http://www.springframework.org/schema/context/spring-context-3.0.xsd
http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd 
 http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd 
 
">

	<!-- JNDI方式配置数据源 -->
	<!-- <bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean"> 
		<property name="jndiName" value="${jndiName}"></property> </bean> -->

	<!-- <context:annotation-config /> -->
	<!-- 引入属性文件 -->
	<context:property-placeholder location="classpath:jdbc.properties" />

	<!-- <bean id="taskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor"> 
		<property name="corePoolSize" value="5" /> <property name="keepAliveSeconds" 
		value="300" /> <property name="maxPoolSize" value="16" /> <property name="queueCapacity" 
		value="25" /> </bean> -->

 	<!-- <bean id="taskExecutor" class="com.utree.workmate.commons.task.TaskThreadImpl"/> --> 


	<bean id="configProperties"
		class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="locations">
			<list>
				<value>classpath:config_dao.properties</value>
				<value>classpath:config_thrift.properties</value>
				<value>classpath:config_file2db.properties</value>
			</list>
		</property>
	</bean>
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PreferencesPlaceholderConfigurer">
		<property name="properties" ref="configProperties" />
	</bean>

	<!-- 自动扫描dao和service包(自动注入) -->
	<context:component-scan base-package="com.jb.common.dao" />	
	<context:component-scan base-package="com.jb.statistics.dao" />

	<bean id="dataSource_logs" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<!-- bean id="dataSourceTarget" class="com.mchange.v2.c3p0.ComboPooledDataSource" 
			destroy-method="close" -->
		<property name="driverClass" value="com.mysql.jdbc.Driver" />
		<property name="jdbcUrl" value="${db_logs.url}" />
		<property name="user" value="${db_logs.username}" />
		<property name="password" value="${db_logs.password}" />
		<property name="maxPoolSize" value="50" />
		<property name="minPoolSize" value="5" />
		<property name="initialPoolSize" value="5" />
		<!--最大空闲时间,60秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0 -->
		<property name="maxIdleTime" value="60" />
		<!--每60秒检查所有连接池中的空闲连接。Default: 0 -->
		<property name="idleConnectionTestPeriod" value="30"></property>

		<!--定义所有连接测试都执行的测试语句。在使用连接测试的情况下这个一显著提高测试速度。注意： 测试的表必须在初始数据源的时候就存在。Default: 
			null -->
		<!-- <property name="preferredTestQuery" value="select id from test where 
			id=1"></property> -->

		<!--c3p0将建一张名为Test的空表，并使用其自带的查询语句进行测试。如果定义了这个参数那么 属性preferredTestQuery将被忽略。你不能在这张Test表上进行任何操作，它将只供c3p0测试 
			使用。Default: null -->
		<property name="automaticTestTable" value="c3p0_auto_test"></property>
		<!-- 获取connnection时测试是否有效 -->
		<property name="testConnectionOnCheckin" value="true"></property>
		<property name="testConnectionOnCheckout" value="true"></property>

		<!-- <property name="autoCommitOnClose" value="false"/> -->
	</bean>




	<bean id="jdbcTemplate_logs" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource">
			<ref local="dataSource_logs" />
		</property>
	</bean>


</beans>
